//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AkamaiProperty) DeepCopyInto(out *AkamaiProperty) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AkamaiProperty.
func (in *AkamaiProperty) DeepCopy() *AkamaiProperty {
	if in == nil {
		return nil
	}
	out := new(AkamaiProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AkamaiProperty) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AkamaiPropertyList) DeepCopyInto(out *AkamaiPropertyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AkamaiProperty, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AkamaiPropertyList.
func (in *AkamaiPropertyList) DeepCopy() *AkamaiPropertyList {
	if in == nil {
		return nil
	}
	out := new(AkamaiPropertyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AkamaiPropertyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AkamaiPropertySpec) DeepCopyInto(out *AkamaiPropertySpec) {
	*out = *in
	if in.Hostnames != nil {
		in, out := &in.Hostnames, &out.Hostnames
		*out = make([]Hostname, len(*in))
		copy(*out, *in)
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = new(PropertyRules)
		(*in).DeepCopyInto(*out)
	}
	if in.EdgeHostname != nil {
		in, out := &in.EdgeHostname, &out.EdgeHostname
		*out = new(EdgeHostnameSpec)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AkamaiPropertySpec.
func (in *AkamaiPropertySpec) DeepCopy() *AkamaiPropertySpec {
	if in == nil {
		return nil
	}
	out := new(AkamaiPropertySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AkamaiPropertyStatus) DeepCopyInto(out *AkamaiPropertyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AkamaiPropertyStatus.
func (in *AkamaiPropertyStatus) DeepCopy() *AkamaiPropertyStatus {
	if in == nil {
		return nil
	}
	out := new(AkamaiPropertyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EdgeHostnameSpec) DeepCopyInto(out *EdgeHostnameSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EdgeHostnameSpec.
func (in *EdgeHostnameSpec) DeepCopy() *EdgeHostnameSpec {
	if in == nil {
		return nil
	}
	out := new(EdgeHostnameSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Hostname) DeepCopyInto(out *Hostname) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Hostname.
func (in *Hostname) DeepCopy() *Hostname {
	if in == nil {
		return nil
	}
	out := new(Hostname)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertyRules) DeepCopyInto(out *PropertyRules) {
	*out = *in
	if in.Criteria != nil {
		in, out := &in.Criteria, &out.Criteria
		*out = make([]RuleCriteria, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Behaviors != nil {
		in, out := &in.Behaviors, &out.Behaviors
		*out = make([]RuleBehavior, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Children.DeepCopyInto(&out.Children)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertyRules.
func (in *PropertyRules) DeepCopy() *PropertyRules {
	if in == nil {
		return nil
	}
	out := new(PropertyRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleBehavior) DeepCopyInto(out *RuleBehavior) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleBehavior.
func (in *RuleBehavior) DeepCopy() *RuleBehavior {
	if in == nil {
		return nil
	}
	out := new(RuleBehavior)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleCriteria) DeepCopyInto(out *RuleCriteria) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleCriteria.
func (in *RuleCriteria) DeepCopy() *RuleCriteria {
	if in == nil {
		return nil
	}
	out := new(RuleCriteria)
	in.DeepCopyInto(out)
	return out
}
