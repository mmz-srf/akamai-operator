apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: akamai-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: akamai-operator
    control-plane: controller-manager
  name: akamai-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: akamaiproperties.akamai.com
spec:
  group: akamai.com
  names:
    kind: AkamaiProperty
    listKind: AkamaiPropertyList
    plural: akamaiproperties
    singular: akamaiproperty
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.propertyId
      name: Property ID
      type: string
    - jsonPath: .status.latestVersion
      name: Latest Version
      type: integer
    - jsonPath: .status.stagingVersion
      name: Staging Version
      type: integer
    - jsonPath: .status.productionVersion
      name: Production Version
      type: integer
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AkamaiProperty is the Schema for the akamaiproperties API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AkamaiPropertySpec defines the desired state of AkamaiProperty
            properties:
              contractId:
                description: ContractID is the Akamai contract ID
                type: string
              edgeHostname:
                description: EdgeHostname specifies the edge hostname configuration
                properties:
                  domainPrefix:
                    description: DomainPrefix is the prefix for the edge hostname
                    type: string
                  domainSuffix:
                    description: DomainSuffix is the suffix for the edge hostname
                    type: string
                  ipVersionBehavior:
                    description: IPVersionBehavior specifies IP version behavior
                    type: string
                  secureNetwork:
                    description: SecureNetwork specifies the secure network type
                    type: string
                required:
                - domainPrefix
                - domainSuffix
                type: object
              groupId:
                description: GroupID is the Akamai group ID where the property should
                  be created
                type: string
              hostnames:
                description: Hostnames are the hostnames that this property should
                  handle
                items:
                  description: Hostname represents a hostname configuration for the
                    property
                  properties:
                    certProvisioningType:
                      description: CertProvisioningType specifies how SSL certificates
                        are provisioned
                      type: string
                    cnameFrom:
                      description: CNAMEFrom is the hostname that will be CNAMEd
                      type: string
                    cnameTo:
                      description: CNAMETo is the edge hostname target
                      type: string
                  required:
                  - cnameFrom
                  - cnameTo
                  type: object
                type: array
              productId:
                description: ProductID is the Akamai product ID (e.g., "prd_Fresca")
                type: string
              propertyName:
                description: PropertyName is the name of the Akamai property
                type: string
              rules:
                description: Rules contains the property rules configuration
                properties:
                  behaviors:
                    description: Behaviors defines the behaviors to apply when criteria
                      match
                    items:
                      description: RuleBehavior defines a behavior to apply
                      properties:
                        name:
                          description: Name is the behavior type (e.g., "origin",
                            "caching")
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: Options contains the behavior configuration
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - name
                      type: object
                    type: array
                  children:
                    description: Children contains nested rules as raw JSON to avoid
                      recursive type issues
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  criteria:
                    description: Criteria defines the match criteria for the rule
                    items:
                      description: RuleCriteria defines a criterion for rule matching
                      properties:
                        name:
                          description: Name is the criterion type (e.g., "hostname",
                            "path")
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: Options contains the criterion configuration
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - name
                      type: object
                    type: array
                  name:
                    description: Name is the name of the rule
                    type: string
                required:
                - name
                type: object
            required:
            - contractId
            - groupId
            - productId
            - propertyName
            type: object
          status:
            description: AkamaiPropertyStatus defines the observed state of AkamaiProperty
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the property's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastUpdated:
                description: LastUpdated is the timestamp when the property was last
                  updated
                format: date-time
                type: string
              latestVersion:
                description: LatestVersion is the latest version of the property
                type: integer
              phase:
                description: Phase represents the current phase of the property lifecycle
                type: string
              productionVersion:
                description: ProductionVersion is the version deployed to production
                type: integer
              propertyId:
                description: PropertyID is the Akamai property ID
                type: string
              stagingVersion:
                description: StagingVersion is the version deployed to staging
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: akamai-operator-akamai-operator-controller-manager
  namespace: akamai-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: akamai-operator-akamai-operator-leader-election-role
  namespace: akamai-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: akamai-operator-akamai-operator-manager-role
rules:
- apiGroups:
  - akamai.com
  resources:
  - akamaiproperties
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - akamai.com
  resources:
  - akamaiproperties/finalizers
  verbs:
  - update
- apiGroups:
  - akamai.com
  resources:
  - akamaiproperties/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: akamai-operator-akamai-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: akamai-operator-akamai-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: akamai-operator-akamai-operator-leader-election-rolebinding
  namespace: akamai-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: akamai-operator-akamai-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: akamai-operator-akamai-operator-controller-manager
  namespace: akamai-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akamai-operator-akamai-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: akamai-operator-akamai-operator-manager-role
subjects:
- kind: ServiceAccount
  name: akamai-operator-akamai-operator-controller-manager
  namespace: akamai-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akamai-operator-akamai-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: akamai-operator-akamai-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: akamai-operator-akamai-operator-controller-manager
  namespace: akamai-operator-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: akamai-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: akamai-operator
    app.kubernetes.io/part-of: akamai-operator
  name: akamai-operator-akamai-operator-controller-manager
  namespace: akamai-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: controller-manager
      app.kubernetes.io/name: akamai-operator
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/instance: controller-manager
        app.kubernetes.io/name: akamai-operator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.16.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: AKAMAI_HOST
          valueFrom:
            secretKeyRef:
              key: host
              name: akamai-credentials
        - name: AKAMAI_CLIENT_TOKEN
          valueFrom:
            secretKeyRef:
              key: client_token
              name: akamai-credentials
        - name: AKAMAI_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client_secret
              name: akamai-credentials
        - name: AKAMAI_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: access_token
              name: akamai-credentials
        image: controller:latest
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: manager
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: akamai-operator-akamai-operator-controller-manager
      terminationGracePeriodSeconds: 10
